#!/bin/sh

echo -n "Provide your username\n"
read username

echo -n "Provide your working directory name"
read work_dir

echo -n "Provide your github username\n"
read git_user

sudo cp /home/$username/$work_dir/.local/etc/dnf.conf /etc/dnf/dnf.conf

sudo dnf update -y
sudo dnf -y upgrade --refresh

#enable non-free
sudo dnf install -y\
  https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

# obsolete with dnf5: sudo dnf groupupdate core

#flatpak add some non-free
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

#media codecs
sudo dnf swap 'ffmpeg-free' 'ffmpeg' --allowerasing # Switch to full FFMPEG.
sudo dnf group install Multimedia
sudo dnf update @multimedia --setopt="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin # Installs gstreamer components. Required if you use Gnome Videos and other dependent applications.
sudo dnf update @sound-and-video # Installs useful Sound and Video complement packages.
sudo dnf install ffmpeg ffmpeg-libs libva libva-utils

#for firefox Video
sudo dnf config-manager --set-enabled fedora-cisco-openh264
sudo dnf install -y openh264 gstreamer1-plugin-openh264 mozilla-openh264

sudo hostnamectl set-hostname "ap"


echo -e "Installing needed packages\n"
sudo dnf install -y fzf git make  neovim lua openssh curl zsh cowsay\
    wget flameshot tmux alsa-utils gnome-tweaks

sudo dnf group install -y "C Development Tools and Libraries" "Development Tools"

sudo dnf groupupdate multimedia --setop="install_weak_deps=False" \
    --exclude=PackageKit-gstreamer-plugin

sudo dnf remove gnome-software PackageKit

#cpu mitigations for intel < 10th gen
sudo grubby --update-kernel=ALL --args="mitigations=off"

#faster boot time
sudo systemctl disable NetworkManager-wait-online.service

flatpak install com.mattjakeman.ExtensionManager


# Navigate to the script's directory
cd "$(dirname "$0")"

# Set directory variables
MAIN_DIR="$HOME/$work_dir"
ZSH_DIR="$MAIN_DIR/.local/etc/zsh"
LOCAL_DIR="$MAIN_DIR/.local"

# Initialize submodules (assuming git is already installed)
cd "$LOCAL_DIR"
git submodule init
git submodule update

# Install required packages using dnf
sudo dnf install -y fzf git make gcc gcc-c++ lua openssh-server curl wget \
 flameshot libXt-devel libX11-devel libXrandr-devel libharfbuzz-devel neofetch \
picom fonts-hermit feh alsa-utils glibc-devel glib2-devel cairo-devel \
fontconfig-fontawesome ffmpeg playerctl ranger mpv xclip scrot ImageMagick \
dconf i3 dunst nm-tray blueman geoclue libopencv-devel libX11-devel i3lock \
keychain brightnessctl ripgrep alacritty python3 emacs-gtk+x11 fd hledger \
i3status gnome-session-xsession texlive-collection-mathextra latex dvisvgm feh #last three for xenops latex preview in emacs

# Setting up fonts
sudo mkdir -p /usr/share/fonts/TTF/Meslo && mv *.ttf /usr/share/fonts/TTF/Meslo/

# Download and install Nerd Fonts (adjust the font name if desired)
cd "$HOME/Downloads"
wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/Hack.zip
mkdir -p ~/.local/share/fonts/TTF
unzip Hack.zip -d HackTTF && mv HackTTF ~/.local/share/fonts/TTF/
rm -rf Hack.zip
cd "$HOME"

# Skip neovim installation using PPA (use dnf instead)
sudo dnf install neovim git
git clone git@github.com:"$git_user"/nvim.git "$HOME/.config/nvim"
git clone git@github.com:"$git_user"/.local.git "$MAIN_DIR/.local"
git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.neovim
rm "$HOME/.zshrc" #????

# Clone tmux plugins (assuming tmux is already installed)
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# Setting up symlinks
mkdir -p "$HOME/.config/i3"
ln -s "$LOCAL_DIR/etc/.xinitrc" "$HOME/"
ln -s "$ZSH_DIR/.zshenv" "$HOME/"  # Assuming you don't use zsh
ln -s "$LOCAL_DIR/etc/.tmux.conf" "$HOME/"
ln -s "$LOCAL_DIR/etc/picom.conf" "$HOME/.config/picom"
ln -s "$LOCAL_DIR/bin/dwm_exec" "$HOME/"
ln -s "$LOCAL_DIR/etc/config" "$HOME/.config/i3/"

# Install nvm using NodeSource
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
. "$HOME/.bashrc"  # Source the .bashrc file immediately

# Install DOOM emacs
git clone --depth 1 https://github.com/doomemacs/doomemacs $HOME/.config/emacs

$HOME/.config/emacs/bin/doom install

git config --global user.name $git_user
git config --global user.email "toulouse88293@outlook.com"

git clone https://github.com/AdnanHodzic/auto-cpufreq.git $HOME/auto-cpufreq
cd $HOME/auto-cpufreq && sudo ./auto-cpufreq-installer

sudo auto-cpufreq --install

chsh

# Final message (adjusted for nvm installation)
cowsay "Restart the shell and do: nvm install node && cd ~/.config/nvim && nvm use node to complete neovim installation"



